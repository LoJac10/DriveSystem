#pragma config(Sensor, in1,    xAccel,         sensorAccelerometer)
#pragma config(Sensor, in2,    yAccel,         sensorAccelerometer)
#pragma config(Motor,  port2,           frontRight,    tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           backRight,     tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           frontLeft,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           backLeft,      tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/////
// Auton Void
/////
void Auton()
{
	wait1Msec(2000); 

	/* CALIBRATION START */
	
	/* Set the bias values */
	xBias = SensorValue(xAccel);
	yBias = SensorValue(yAccel);
	wait1Msec(25);
	
	/* Set current acceleration */
	currentX = SensorValue(xAccel) - xBias;
	currentY = SensorValue(yAccel) - yBias;
	wait1Msec(25);
	
	/* CALIBRATION  OVER */

	while (place == 0)
	{
		/* Making sure the robot starts without moving */
		if (currentX < threshold && currentY <  threshold)
		{
			place = 1;
		}
		
		else if (currentX > threshold || currentY > threshold)
		{
			Program = 0;
		}
	}
	
	/* We know the robot isn't moving, 
	   so we start the auton */
	while (place == 1)
	{
		/* Start calculating the current position on a loop */
		currentX = SensorValue(xAccel) - xBias;
		currentY = SensorValue(yAccel) - yBias;
		wait1Msec(25);
		

		xPos = currentX * 2;
		xNeg = currentX * 4;
		
		yPos = currentY * 2;
		yNeg = currentY * 4;
		
		//127 is a test value, haven't
		//tested for correct values
		motor[frontRight] = 127;
		motor[backRight] = 127;
		motor[frontLeft] = 127;
		motor[backLeft] = 127;
	}
}
