#pragma config(Sensor, in1,    xAccel,         sensorAccelerometer)
#pragma config(Sensor, in2,    yAccel,         sensorAccelerometer)
#pragma config(Motor,  port2,           frontRight,    tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,           backRight,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           frontLeft,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           backLeft,      tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/* Integer Setup */

/////
// User Control Void
/////
void userControl()
{

	/* Joystick Channel 1 */
	/* Right Y Axis */
	if (vexRT[Ch1] > RTthresh)
	{
		Cha1 = vexRT[Ch1];
	}
	else if (vexRT[Ch1] < RTthresh)
	{
		Cha1 = 0;
	}

	/* Joystick Channel 2 */
	/* Right X Axis */
	if (vexRT[Ch2] > RTthresh)
	{
		Cha2 = vexRT[Ch2];
	}
	else if (vexRT[Ch2] < RTthresh)
	{
		Cha2 = 0;
	}

	/* Joystick Channel 3 */
	/* Left X Axis */
	if (vexRT[Ch3] > RTthresh)
	{
		Cha3 = vexRT[Ch3];
	}
	else if (vexRT[Ch3] < RTthresh)
	{
		Cha3 = 0;
	}

	/* Joystick Channel 4 */
	/* Left Y Axis */
	if (vexRT[Ch4] > RTthresh)
	{
		Cha4 = vexRT[Ch4];
	}
	else if (vexRT[Ch4] < RTthresh)
	{ 
		Cha4 = 0;
	}

	/* Setting Motor Values */
	motor[frontRight] = Cha1 - Cha4 - Cha2;
	motor[backRight] = Cha1 - Cha4 + Cha2;
	motor[frontLeft] = Cha1 + Cha4 + Cha2;
	motor[backLeft] = Cha1 + Cha4 - Cha2;
}
